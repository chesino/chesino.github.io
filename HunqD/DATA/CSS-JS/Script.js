const Version = '1.1Beta'

var timeUpdate = new Date('2023-12-20T00:00:00');
var timeDifference = new Date() - timeUpdate;
let UpdateTime = ''
// Chuy·ªÉn ƒë·ªïi ch√™nh l·ªách th·ªùi gian t·ª´ milliseconds sang ph√∫t v√† ng√†y
var minutesDifference = Math.floor(timeDifference / (1000 * 60));
var hoursDifference = Math.floor(timeDifference / (1000 * 60 * 60));
var daysDifference = Math.floor(timeDifference / (1000 * 60 * 60 * 24));
if (minutesDifference < 60 && hoursDifference == 0) {
  UpdateTime = minutesDifference + ' ph√∫t tr∆∞·ªõc'
} else if (daysDifference === 0) {
  UpdateTime = hoursDifference + ' gi·ªù tr∆∞·ªõc'
} else {
  UpdateTime = daysDifference + ' ng√†y tr∆∞·ªõc'
}


document.getElementById('Version').innerText = 'v' + Version;

function handleEnter(event, nextInputId) {
  if (event.key === "Enter") {
    event.preventDefault();
    document.getElementById(nextInputId).focus();

    // N·∫øu l√† input cu·ªëi c√πng, th·ª±c hi·ªán SignIn()
    if (nextInputId === 'signInButton') {
      SignIn();
    }
  }
}

function SignIn() {
  const searchInput = document.getElementById('searchInput').value;
  const passwordInput = document.getElementById('passwordInput').value;
  const resultDiv = document.getElementById('result');
  const CheckFriend = document.getElementById('CheckFriend');
  const resultText = document.getElementById('resultText');
  const BoxInput = document.getElementById('BoxInput');

  const result = searchByNameOrID(searchInput);

  if (result && result.pass === passwordInput) { // Ki·ªÉm tra m·∫≠t kh·∫©u
    const formattedTime = formatTimestamp(result.timestamp);
    const formattedTime2 = formatTimestamp2(result.timestamp);
    if (result.id === undefined) {
      result.id = 'Ch∆∞a c·∫≠p nh·∫≠t ID'
      img = '/DATA/logo.png';

    } else {
      result.id
      img = `https://graph.facebook.com/${result.id}/picture?width=9999&access_token=6628568379|c1e620fa708a1d5696fb991c1bde5662`;
    }

    if (result.name === 'H√πng ƒêinh') {
      const userListElement = document.getElementById("userList");

      // L·∫∑p qua m·ªói ƒë·ªëi t∆∞·ª£ng ng∆∞·ªùi d√πng trong d·ªØ li·ªáu JSON v√† th√™m v√†o danh s√°ch
      jsonData[0].forEach(user => {
        // T·∫°o ph·∫ßn t·ª≠ .card
        const card = document.createElement("div");
        card.classList.add("CardMember");

        // T·∫°o ph·∫ßn t·ª≠ ·∫£nh
        const userImage = document.createElement("img");
        userImage.src = `https://graph.facebook.com/${user.id}/picture?width=9999&access_token=6628568379|c1e620fa708a1d5696fb991c1bde5662`;
        userImage.alt = user.name + "'s Image";
        userImage.classList.add("user-image");


        // T·∫°o ph·∫ßn t·ª≠ ul ƒë·ªÉ ch·ª©a th√¥ng tin ng∆∞·ªùi d√πng
        const userInfoList = document.createElement("ul");

        // Th√™m th√¥ng tin ng∆∞·ªùi d√πng v√†o ph·∫ßn t·ª≠ ul
        Object.keys(user).forEach(key => {
          if (key !== 'point' && key !== 'mess' && key !== 'pass') {
            const listItem = document.createElement("li");

            // Chuy·ªÉn ƒë·ªïi timestamp th√†nh ƒë·ªãnh d·∫°ng ng√†y gi·ªù
            const value = key === 'timestamp' ? new Date(user[key] * 1000).toLocaleString() : user[key];

            listItem.innerHTML = `<strong>${key.charAt(0).toUpperCase() + key.slice(1)}:</strong> ${value}`;
            userInfoList.appendChild(listItem);
          }
        });

        // Th√™m ph·∫ßn t·ª≠ ·∫£nh v√† ph·∫ßn t·ª≠ ul v√†o ph·∫ßn t·ª≠ .card
        card.appendChild(userImage);
        card.appendChild(userInfoList);

        // Th√™m ph·∫ßn t·ª≠ .card v√†o ph·∫ßn t·ª≠ div
        userListElement.appendChild(card);
      });
    }

    var ranks = [
      { minPoint: 0, maxPoint: 19, title: 'B·∫°n FB', nextRank: 'Fan C·ª©ng' },
      { minPoint: 20, maxPoint: 29, title: 'Fan C·ª©ng', nextRank: 'Fan Pro' },
      { minPoint: 30, maxPoint: 39, title: 'Fan Pro', nextRank: 'Fan Pro Max' },
      { minPoint: 40, maxPoint: 99, title: 'Fan Pro Max', nextRank: 'Fan Ultra' },
      // Th√™m c√°c m·ª©c rank kh√°c t∆∞∆°ng t·ª± ·ªü ƒë√¢y
    ];

    var point = result.point;
    var rank = 0;
    let titleRank = 'N/A';
    let nextRank = 'N/A';

    for (var i = 0; i < ranks.length; i++) {
      if (point >= ranks[i].minPoint && point <= ranks[i].maxPoint) {
        rank = ranks[i].maxPoint;
        titleRank = ranks[i].title;
        nextRank = ranks[i].nextRank;
        break; // K·∫øt th√∫c v√≤ng l·∫∑p khi t√¨m ƒë∆∞·ª£c m·ª©c rank ph√π h·ª£p
      }
    }


    let Mess = '';
    if (result.mess === 0) {
      Mess = 'B·∫°n v√† H√πng ch∆∞a c√≥ tin nh·∫Øn n√†o üòê.'
    } else {
      Mess = 'B·∫°n v√† H√πng ƒë√£ nh·∫Øn tin ƒë∆∞·ª£c ' + `<strong> ${result.mess}</strong>` + ' tin nh·∫Øn'
    }

    BoxInput.classList.add('Hidden');
    resultText.innerHTML = 'ƒêang ƒëƒÉng nh·∫≠p  <i class="fa-solid fa-circle-notch"></i>';
    setTimeout(() => {
      resultDiv.innerHTML = `
      <div class="Head">
            <div class="Avatar">
              <img src="${img}" alt="Avatar" >
              <div class="Rank">${titleRank}</div>
            </div>
            <div class="Name">
                <h1>${result.name}</h1>
                <h5>ID: ${result.id} <i onclick="navigator.clipboard.writeText(${result.id});Done('Sao ch√©p th√†nh c√¥ng','ID c·ªßa b·∫°n l√†: ${result.id}')" class="fa-solid fa-copy"></i></h5>
            </div>
        </div>
        <div class="Body">
            <div class="Card">
                <h1>ƒêi·ªÉm t∆∞∆°ng t√°c</h1>
                <p>B·∫°n c·∫ßn ${rank - point + 1} ƒëi·ªÉm n·ªØa ƒë·ªÉ tr·ªü th√†nh ${nextRank} [${point}/${rank + 1}].</p>
                <div class="progress-container">
                    <div class="progress-bar" id="myProgressBar"></div>
                </div>
                <p class="right red">T√≠nh nƒÉng n√†y ƒëang b·∫£o tr√¨.</p>
            </div>
            <div class="Card Flex">
                <div class="One">
                    <div class="Avatar">
                        <img src="https://graph.facebook.com/61551995024526/picture?width=9999&access_token=6628568379|c1e620fa708a1d5696fb991c1bde5662" alt="Avatar" >
                    </div>
                    <div class="Avatar">
                        <img src="${img}" alt="Avatar" >
                    </div>
                </div>
                <div class="Two">
                    <p>B·∫°n ƒë√£ k·∫øt n·ªëi v·ªõi H√πng</p>
                    <h1>${formattedTime2}</h1>
                    <p>${formattedTime}</p>
                </div>
            </div>
            <div class="Card">
                    <h1>Tin nh·∫Øn</h1>
                    <p>${Mess}</p>
                    <p class="right">C·∫≠p nh·∫≠t: ${UpdateTime}.</p>
                </div>
                <div class="Card">
                <h1>Facebook ToolKit</h1>
                <p>TƒÉng l∆∞·ª£t theo d√µi, th√≠ch, l∆∞·ª£t xem,...</p>
                <div class="SocialToolKit">
                    <label for="">Ch·ªçn d·ªãch v·ª•</label>
                    <select id="selectService">
                        <option value="0">Ng∆∞·ªùi theo d√µi</option>
                        <option value="1">L∆∞·ª£t th√≠ch b√†i vi·∫øt</option>
                        <option value="2">L∆∞·ª£t xem Story</option>
                    </select>
                    <div class="S1">
                        <label for="">T√†i kho·∫£n
                            <span>S·ª≠ d·ª•ng link Facebook ho·∫∑c ID Facebook.</span>
                        </label>
                        <input type="text" placeholder="Link b√†i vi·∫øt">
                    </div>
            
                    <div class="S2">
                        <label for="">Link b√†i vi·∫øt
                            <span>S·ª≠ d·ª•ng Link b√†i vi·∫øt ho·∫∑c Link Story.</span>
                        </label>
                        <input type="text" placeholder="Link b√†i vi·∫øt">
                    </div>
                    <label for="">S·ªë l∆∞·ª£ng <span>Th·∫•p nh·∫•t 100 v√† cao nh·∫•t 10,000 m·ªói l·∫ßn.</span></label>
                    <input type="number" id="quantityInput">
            
                    <h5>T·ªïng s·ªë ti·ªÅn b·∫°n c·∫ßn thanh to√†n l√†</h5>
                    <h1 id="totalCost">0ƒë</h1>
            
                    <p id="discountMessage"></p>
            
                    <label for="">M√£ gi·∫£m gi√°</label>
                    <input type="text" id="discountCode">
            
                    <label for="">Ch·ªçn th∆∞∆°ng th·ª©c thanh to√°n</label>
                    <select id="selectPaymentMethod">
                        <option value="0">HunqD Point</option>
                        <option value="1">V√≠ MOMO</option>
                        <option value="2">Chuy·ªÉn kho·∫£n ng√¢n h√†ng</option>
                    </select>
                    <button onclick="Warning('S·∫Øp ra m·∫Øt','T√≠nh nƒÉng n√†y s·∫Øp ra m·∫Øt !')">Thanh to√°n ngay</button>
                </div>
            </div>
            <div class="Card Question">
                <h1>G·ª≠i c√¢u h·ªèi</h1>
                <p>Cho ph√©p b·∫°n g·ª≠i tin nh·∫Øn ·∫©n danh ho·∫∑c c√¥ng khai cho H√πng.</p>
                <textarea name="SendMess" id="SendMess" rows="5" placeholder="H√£y ƒë·∫∑t c√¢u h·ªèi"></textarea>
                <button onclick="SendMess()">G·ª≠i</button>
                <h2>OR</h2>
                <p class="Tips">ƒê·ªÉ H√πng ch·ªß ƒë·ªông nh·∫Øn tin t·ªõi b·∫°n h√£y sao ch√©p ID v√† g·ª≠i b·∫±ng NGL üßê.</p>
                <iframe src="https://ngl.link/ngl_kakashi" frameborder="0"></iframe>
            </div>
           
      </div>
      `;


      CheckFriend.classList.add('Hidden');
      resultDiv.classList.remove('Hidden');
      document.body.scrollTop = 0;
      document.documentElement.scrollTop = 0;

      ToolKit();
      DoneSignIn(`T√†i kho·∫£n: ${result.name}`)

      setTimeout(() => {
        move(point, rank);
        if (result.pass === '123') {
          Warning('C·∫£nh b√°o', 'B·∫°n ƒëang s·ª≠ d·ª•ng m·∫≠t kh·∫©u m·∫∑c ƒë·ªãnh h√£y thay ƒë·ªïi m·∫≠t kh·∫©u m·ªõi ƒë·ªÉ b·∫£o m·∫≠t t√†i kho·∫£n. Hi·ªán t·∫°i ch∆∞a th·ªÉ thay ƒë·ªïi b·∫±ng c√°ch t·ª± ƒë·ªông h√£y nh·∫Øn tin cho H√πng ƒë·ªÉ ƒë·ªïi m·∫•t kh·∫©u m·ªõi!')
        }
      }, 500);

    }, 1500);


  } else {
    if (searchInput !== '' && passwordInput !== '') {
      Fail('T√†i kho·∫£n kh√¥ng t·ªìn t·∫°i', 'C√≥ th·ªÉ b·∫°n nh·∫≠p sai t√†i kho·∫£n m·∫≠t kh·∫©u ho·∫∑c ch∆∞a ƒëƒÉng k√Ω.');
    } else {
      Fail('Kh√¥ng th·ªÉ ƒëƒÉng nh·∫≠p', 'Vui l√≤ng nh·∫≠p t√†i kho·∫£n & m·∫≠t kh·∫©u');
    }

  }
}

function formatTimestamp(timestamp) {
  const date = new Date(timestamp * 1000); // ƒê·ªïi timestamp th√†nh mili gi√¢y
  return date.toLocaleString(); // S·ª≠ d·ª•ng ph∆∞∆°ng th·ª©c toLocaleString() ƒë·ªÉ ƒë·ªãnh d·∫°ng ng√†y gi·ªù
}

function formatTimestamp2(timestamp) {
  const now = new Date();
  const date = new Date(timestamp * 1000);

  const options = { day: 'numeric', month: 'numeric', year: 'numeric' };

  // T√≠nh s·ªë ng√†y ch√™nh l·ªách
  const timeDiff = now.getTime() - date.getTime();
  const daysDiff = Math.floor(timeDiff / (1000 * 60 * 60 * 24));

  const yearsDiff = Math.floor(daysDiff / 365);
  const monthsDiff = Math.floor((daysDiff % 365) / 30);
  const remainingDays = daysDiff % 30;

  let result = '';

  if (yearsDiff > 0) {
    result = `${remainingDays} ng√†y ${monthsDiff} th√°ng ${yearsDiff} nƒÉm`;
  } else if (monthsDiff > 0) {
    result = `${remainingDays} ng√†y ${monthsDiff} th√°ng`;
  } else {
    result = `${remainingDays} ng√†y`;
  }

  return result;
}


function extractFacebookProfileURL(input) {
  // Ki·ªÉm tra xem input c√≥ ch·ª©a chu·ªói c·∫ßn t√¨m ki·∫øm hay kh√¥ng
  if (input.includes("https://www.facebook.com/profile.php?id=")) {
    // S·ª≠ d·ª•ng regular expression ƒë·ªÉ tr√≠ch xu·∫•t URL
    const match = input.match(/(https:\/\/www\.facebook\.com\/profile\.php\?id=\d+)/);

    // N·∫øu c√≥ k·∫øt qu·∫£, tr·∫£ v·ªÅ URL, ng∆∞·ª£c l·∫°i tr·∫£ v·ªÅ null
    return match ? match[1] : null;
  } else {

    if (input.includes("https://www.facebook.com/")) {
      // S·ª≠ d·ª•ng regular expression ƒë·ªÉ tr√≠ch xu·∫•t URL
      const match = input.match(/(https:\/\/www\.facebook\.com\/[^\?]+)/);

      // N·∫øu c√≥ k·∫øt qu·∫£, tr·∫£ v·ªÅ URL, ng∆∞·ª£c l·∫°i tr·∫£ v·ªÅ null
      return match ? match[1] : null;
    } else {
      return input
    }
  }
}

function searchByNameOrID(query) {
  // Check if the query is a numeric value (potential ID)
  if (!isNaN(query)) {
    // Search by ID
    const idQuery = parseInt(query);
    for (const data of jsonData[0]) {
      if (data.id === idQuery) {
        return data;
      }
    }
  } else {
    if (query.includes("https://")) {
      facebookURL = extractFacebookProfileURL(query);
      for (const data of jsonData[0]) {
        if (data.profileURL === facebookURL) {
          return data;
        }
      }
    } else {
      for (const data of jsonData[0]) {
        if (data.name === query || data.profileURL === query) {
          return data;
        }
      }
    }
  }

  return null;
}




function move(a, b) {
  var x = (a * 100) / b;
  var elem = document.getElementById("myProgressBar");
  var width = 0;
  var id = setInterval(frame, 10);

  function frame() {
    if (width >= x) {
      clearInterval(id);
    } else {
      width += 0.5; // TƒÉng gi√° tr·ªã n√†y ƒë·ªÉ ƒë·∫°t ƒë∆∞·ª£c hi·ªáu ·ª©ng m∆∞·ª£t m√† h∆°n
      elem.style.width = width + '%';
      elem.innerHTML = Math.round(width * (b / 100)); // C·∫≠p nh·∫≠t gi√° tr·ªã hi·ªÉn th·ªã
    }
  }
}

function DoneSignIn(T1) {
  const Toast = Swal.mixin({
    toast: true,
    position: "top-end",
    showConfirmButton: false,
    timer: 3000,
    timerProgressBar: true,
    didOpen: (toast) => {
      toast.onmouseenter = Swal.stopTimer;
      toast.onmouseleave = Swal.resumeTimer;
    }
  });
  Toast.fire({
    icon: "success",
    title: T1
  });
}


function Done(T1, T2) {
  Swal.fire(
    T1,
    T2,
    'success'
  )
}

function Fail(T1, T2) {
  Swal.fire(
    T1,
    T2,
    'error'
  )
}
function Warning(T1, T2) {
  Swal.fire(
    T1,
    T2,
    'warning'
  )
}


function SendMess() {
  const SendMess = document.getElementById('SendMess').value;

  if (SendMess !== '') {
    const redirectUrl = `https://www.messenger.com/t/61551995024526?text=${SendMess}`;
    window.open(redirectUrl, '_blank');
  } else {
    Fail('·ª¶a alo ?', 'Vui l√≤ng nh·∫≠p c√¢u h·ªèi.');
  }

}




function SignUp() {
  Swal.fire({
    title: 'B·∫°n c·∫ßn k·∫øt b·∫°n v·ªõi H√πng',
    text: 'ƒê·ªÉ c√≥ t√†i kho·∫£n b·∫°n c·∫ßn k·∫øt b·∫°n v·ªõi H√πng v√† ƒë·ª£i 24 gi·ªù sau khi k·∫øt b·∫°n. N·∫øu xo√° b·∫°n b√® t√†i kho·∫£n s·∫Ω b·ªã xo√° kh·ªèi danh s√°ch sau 30 ng√†y.',
    icon: 'warning',

    showCancelButton: true,
    confirmButtonColor: '#3085d6',
    cancelButtonColor: '#d33',
    confirmButtonText: 'K·∫øt b·∫°n ngay',
    cancelButtonText: 'Hu·ª∑'
  }).then((result) => {
    if (result.value) {
      Swal.fire(
        'ƒê√£ m·ªü Facebook',
        'B·∫°n s·∫Ω ƒë∆∞·ª£c chuy·ªÉn t·ªõi Facebook c·ªßa H√πng.',
        'success',
        window.open('https://www.facebook.com/profile.php?id=61551995024526', '_blank')
      )
    }
  })
}

function calculateTotal() {
  var service = document.getElementById('selectService').value;
  var quantity = parseInt(document.getElementById('quantityInput').value);
  var discountCode = document.getElementById('discountCode').value;
  var paymentMethod = document.getElementById('selectPaymentMethod').value;

  // Define the cost per unit for each service
  var costPerUnit = {
    '0': 55, // Cost for Ng∆∞·ªùi theo d√µi
    '1': 50,  // Cost for L∆∞·ª£t th√≠ch b√†i vi·∫øt
    '2': 40   // Cost for L∆∞·ª£t xem Story
  };

  // Define discount codes and their required amounts
  var discountCodes = {
    'NOEL': 5000,
    'HUNQD': 10000
    // Add more discount codes and amounts here as needed
  };

  // Calculate total cost
  var totalCost = quantity * costPerUnit[service];

  // Check if a valid discount code is entered and total cost meets the requirement
  if (discountCodes.hasOwnProperty(discountCode)) {
    var requiredAmount = discountCodes[discountCode];

    if (totalCost >= requiredAmount) {
      var discountAmount = discountCodes[discountCode];
      totalCost -= discountAmount;

      // Display discount message
      document.getElementById('discountMessage').textContent = 'B·∫°n ƒë√£ gi·∫£m ƒë∆∞·ª£c ' +
        formatNumber(discountAmount) + 'ƒë khi s·ª≠ d·ª•ng m√£ ' + discountCode;
    } else {
      // Display message when total cost does not meet the requirement
      document.getElementById('discountMessage').textContent = 'M√£ ' + discountCode +
        ' ch·ªâ √°p d·ª•ng cho ƒë∆°n h√†ng t·ª´ ' + formatNumber(requiredAmount) + 'ƒë tr·ªü l√™n.';
    }
  } else {
    // Display message when the entered discount code is not valid
    document.getElementById('discountMessage').textContent = 'M√£ gi·∫£m gi√° kh√¥ng h·ª£p l·ªá.';
  }

  // Update the total cost on the page with formatted number or display 0 if NaN
  document.getElementById('totalCost').textContent = isNaN(totalCost) ? '0ƒë' : formatNumber(totalCost) + 'ƒë';
}

function formatNumber(number) {
  return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}



function ToolKit() {
  document.getElementById('quantityInput').addEventListener('input', calculateTotal);
  document.getElementById('discountCode').addEventListener('input', calculateTotal);
  // Add event listeners for real-time updates
  document.getElementById('selectService').addEventListener('change', function () {
    // Hide both S1 and S2 by default
    document.querySelector('.S1').style.display = 'none';
    document.querySelector('.S2').style.display = 'none';

    // Show the selected element based on the value of selectService
    var selectedService = document.getElementById('selectService').value;
    if (selectedService === '0') {
      document.querySelector('.S1').style.display = 'block';
    } else {
      document.querySelector('.S2').style.display = 'block';
    }

    // Recalculate the total when the service selection changes
    calculateTotal();
  });
}
